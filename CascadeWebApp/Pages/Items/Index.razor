@page "/items"
@inject CascadeWebApp.Services.ItemService ItemService

<div class="pa-4 mud-theme-dark">
    <h5>Item List</h5>
    <input class="mb-2" placeholder="Searchâ€¦" @bind="_search" />
    <div class="table-scroll">
        <table class="app-table">
            <thead>
                <tr>
                    <th>Item #</th>
                    <th>Thread</th>
                    <th>Gauge</th>
                    <th>End Type</th>
                    <th>End MM</th>
                    <th>End Inch</th>
                    <th>Length</th>
                    <th>On Order</th>
                    <th>In Production</th>
                    <th>On the Wall</th>
                    <th>In the Shop</th>
                    <th>Available</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in _filteredItems)
                {
                    <tr @onclick="() => OpenItemModal(item)">
                        <td>@item.ItemNumber</td>
                        <td>@item.Thread</td>
                        <td>@item.Gauge</td>
                        <td>@item.EndType</td>
                        <td>@item.EndMM</td>
                        <td>@item.EndInch</td>
                        <td>@item.Length</td>
                        <td>@item.OnOrder</td>
                        <td>@item.InProduction</td>
                        <td>@item.OnTheWall</td>
                        <td>@item.InTheShop</td>
                        <td>@item.Available</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (_showModal && _selectedItem != null)
{
    <div class="modal-backdrop" @onclick="CloseModal"></div>
    <div class="modal-dialog">
        <div class="modal-header">
            <h5>Item Details - @_selectedItem.ItemNumber</h5>
            <button type="button" class="close" @onclick="CloseModal">&times;</button>
        </div>
        <div class="modal-body">
            <div>Thread: @_selectedItem.Thread</div>
            <div>Gauge: @_selectedItem.Gauge</div>
            <div>End Type: @_selectedItem.EndType</div>
            <div>End MM: @_selectedItem.EndMM</div>
            <div>End Inch: @_selectedItem.EndInch</div>
            <div>Length: @_selectedItem.Length</div>
            <div>On Order: @_selectedItem.OnOrder</div>
            <div>In Production: @_selectedItem.InProduction</div>
            <div>On the Wall: @_selectedItem.OnTheWall</div>
            <div>In the Shop: @_selectedItem.InTheShop</div>
            <div>Available: @_selectedItem.Available</div>
            <div>Machining Length: @_selectedItem.MachiningLength</div>
            <div>Cycle Time: @_selectedItem.CycleTime</div>
            <div>Stock Qty: @_selectedItem.StockQty</div>
            <div>Build Qty: @_selectedItem.BuildQty</div>
            <div>Min Stock Size: @_selectedItem.MinStockSize</div>
            <div class="table-scroll">
                <table class="app-table">
                    <thead>
                        <tr>
                            <th>Batch #</th>
                            <th>Date Finished</th>
                            <th>Assign 1</th>
                            <th>Qty 1</th>
                            <th>Assign (Action)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>SampleBatch</td>
                            <td>2025-08-17</td>
                            <td>Assignee</td>
                            <td>10</td>
                            <td>
                                <button class="btn btn-primary" disabled>Assign</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" @onclick="CloseModal">Close</button>
        </div>
    </div>
}

@code {
    private string _search = "";
    private List<CascadeWebApp.Models.Item> _items = new();
    private IEnumerable<CascadeWebApp.Models.Item> _filteredItems => string.IsNullOrWhiteSpace(_search)
        ? _items
        : _items.Where(i => i.ItemNumber.Contains(_search, StringComparison.OrdinalIgnoreCase));
    private CascadeWebApp.Models.Item? _selectedItem;
    private bool _showModal = false;

    protected override async Task OnInitializedAsync()
    {
        _items = await ItemService.GetItemsAsync();
    }

    private void OpenItemModal(CascadeWebApp.Models.Item item)
    {
        _selectedItem = item;
        _showModal = true;
    }

    private void CloseModal()
    {
        _showModal = false;
        _selectedItem = null;
    }
}