@page "/orders"
@inject CascadeWebApp.Services.OrderService OrderService

<div class="pa-4" style="background: #222; color: #fff;">
    <h5>Order List</h5>
    <input class="mb-2" placeholder="Searchâ€¦" @bind="_search" />
    <div class="table-scroll">
        <table class="app-table">
            <thead>
                <tr>
                    <th>Order #</th>
                    <th>Order Date</th>
                    <th>Studio</th>
                    <th>Est Ship Date</th>
                    <th>Shipping Deadline</th>
                    <th>Shipping Method</th>
                    <th>Partial</th>
                    <th>Order Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in _filteredOrders)
                {
                    <tr @onclick="() => OpenOrderModal(order)">
                        <td>@order.OrderNumber</td>
                        <td>@order.OrderDate.ToShortDateString()</td>
                        <td>@order.Studio</td>
                        <td>@order.EstShipDate.ToShortDateString()</td>
                        <td>@order.ShippingDeadline.ToShortDateString()</td>
                        <td>@order.ShippingMethod</td>
                        <td>@(order.Partial ? "Yes" : "No")</td>
                        <td>@order.OrderStatus</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@if (_showModal && _selectedOrder != null)
{
    <div class="modal-backdrop" @onclick="CloseModal"></div>
    <div class="modal-dialog">
        <!-- Floating close button -->
        <button type="button" class="modal-close-floating" @onclick="CloseModal">&times;</button>
        
        <div class="modal-body">
            <!-- Title field - Order Number centered without label -->
            <div class="modal-detail-title">@_selectedOrder.OrderNumber</div>
            
            <div class="modal-details">
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Order Date</div>
                    <div class="modal-detail-value">@_selectedOrder.OrderDate.ToShortDateString()</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Studio</div>
                    <div class="modal-detail-value">@_selectedOrder.Studio</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Est Ship Date</div>
                    <div class="modal-detail-value">@_selectedOrder.EstShipDate.ToShortDateString()</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Shipping Deadline</div>
                    <div class="modal-detail-value">@_selectedOrder.ShippingDeadline.ToShortDateString()</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Shipping Method</div>
                    <div class="modal-detail-value">@_selectedOrder.ShippingMethod</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Partial</div>
                    <div class="modal-detail-value">@(_selectedOrder.Partial ? "Yes" : "No")</div>
                </div>
                <div class="modal-detail-field">
                    <div class="modal-detail-label">Order Status</div>
                    <div class="modal-detail-value">@_selectedOrder.OrderStatus</div>
                </div>
            </div>
            <div class="table-scroll">
                <table class="app-table">
                    <thead>
                        <tr>
                            <th>Item #</th>
                            <th>Thread</th>
                            <th>Gauge</th>
                            <th>End Type</th>
                            <th>End MM</th>
                            <th>End Inch</th>
                            <th>Length</th>
                            <th>Qty Ordered</th>
                            <th>Qty Remaining</th>
                            <th>Qty Pulled</th>
                            <th>Qty Shipped</th>
                            <th>Qty Assigned</th>
                            <th>Assignment Location</th>
                            <th>Print Labels</th>
                            <th>Split</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>SampleItem</td>
                            <td>M8</td>
                            <td>10</td>
                            <td>Flat</td>
                            <td>12</td>
                            <td>0.47</td>
                            <td>100</td>
                            <td>20</td>
                            <td>10</td>
                            <td>10</td>
                            <td>5</td>
                            <td>5</td>
                            <td>Shop</td>
                            <td>
                                <input type="checkbox" disabled />
                            </td>
                            <td>
                                <button class="btn btn-primary" disabled>Split</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-primary" @onclick="CloseModal">Close</button>
        </div>
    </div>
}

@code {
    private string _search = "";
    private List<CascadeWebApp.Models.Order> _orders = new();
    private IEnumerable<CascadeWebApp.Models.Order> _filteredOrders => string.IsNullOrWhiteSpace(_search)
        ? _orders
        : _orders.Where(o => o.OrderNumber.Contains(_search, StringComparison.OrdinalIgnoreCase));
    private CascadeWebApp.Models.Order? _selectedOrder;
    private bool _showModal = false;

    protected override async Task OnInitializedAsync()
    {
        _orders = await OrderService.GetOrdersAsync();
    }

    private void OpenOrderModal(CascadeWebApp.Models.Order order)
    {
        _selectedOrder = order;
        _showModal = true;
    }

    private void CloseModal()
    {
        _showModal = false;
        _selectedOrder = null;
    }
}