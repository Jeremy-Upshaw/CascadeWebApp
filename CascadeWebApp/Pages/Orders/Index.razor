@page "/orders"
@using MudBlazor
@inject CascadeWebApp.Services.OrderService OrderService
@inject IDialogService DialogService

<MudPaper Class="pa-4 mud-theme-dark">
    <MudText Typo="Typo.h5">Order List</MudText>
    <MudTextField @bind-Value="_search" Placeholder="Searchâ€¦" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Class="mb-2" />
    <MudTable T="CascadeWebApp.Models.Order" Items="_filteredOrders" Hover="true" Dense="true" OnRowClick="@OpenOrderModal">
        <HeaderContent>
            <MudTh>Order #</MudTh>
            <MudTh>Order Date</MudTh>
            <MudTh>Studio</MudTh>
            <MudTh>Est Ship Date</MudTh>
            <MudTh>Shipping Deadline</MudTh>
            <MudTh>Shipping Method</MudTh>
            <MudTh>Partial</MudTh>
            <MudTh>Order Status</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.OrderNumber</MudTd>
            <MudTd>@context.OrderDate.ToShortDateString()</MudTd>
            <MudTd>@context.Studio</MudTd>
            <MudTd>@context.EstShipDate.ToShortDateString()</MudTd>
            <MudTd>@context.ShippingDeadline.ToShortDateString()</MudTd>
            <MudTd>@context.ShippingMethod</MudTd>
            <MudTd>@(context.Partial ? "Yes" : "No")</MudTd>
            <MudTd>@context.OrderStatus</MudTd>
        </RowTemplate>
    </MudTable>
</MudPaper>

@code {
    private string _search = "";
    private List<CascadeWebApp.Models.Order> _orders = new();
    private IEnumerable<CascadeWebApp.Models.Order> _filteredOrders => string.IsNullOrWhiteSpace(_search)
        ? _orders
        : _orders.Where(o => o.OrderNumber.Contains(_search, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        _orders = await OrderService.GetOrdersAsync();
    }

    private async Task OpenOrderModal(TableRowClickEventArgs<CascadeWebApp.Models.Order> e)
    {
        var parameters = new DialogParameters { ["Order"] = e.Item };
        var options = new DialogOptions() { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Medium };
        
        var dialog = await DialogService.ShowAsync<CascadeWebApp.Components.OrderDialog>("Order Details", parameters, options);
        await dialog.Result;
    }
}
